The script can be run with a path to neo4j and the path to the project.
First map the AEOLUS outcome and the AEOLUS drugs. After that, the connections are integrated.

First, the outcome is mapped to Side Effect (SE) and Disease:
    First for AEOLUS outcome MedDRA ID search for UMLS CUIs in BioPortal or get them from the SE with the same name. The check if the UMLS CUIs are in SE. 
    The nodes which did not map to SE are tried to mapped to Disease. Therefore, it uses mapping with MedDRA to the external references MedDRA ID in Disease. The rest is mapped with UMLS Cui to external references and name to name of Disease. 
    The nodes that are not mapped but have a UMLS CUI are added to a CSV to generate new SE nodes.
    For all mapped outcomes a csv file for SE and disease is generated. Additionally, A cypher file which integrates the mapping information and the new node.

Next, the AEOLUS drugs are mapped to Chemical:
    The mapping of the AEOLUS drugs has many different methods:
    1. Mapped RXNORM cui to Drugbank ids with use of RXNORM database.
    2. Mapped RXNORM Cui to Drugbank ids with a mapped table which used the unii and InChIKey to generate the connection
    3. Mapped RXNORM Cui to Drugbank ids with a mapped table, which was generated with name mapping. 
    4. Mapped RXNORM Cui to MESH ids with the use of RXNORM database.
    All mappings are written in a mapping CSV file. Additionally, a cypher query to integrate the mapped node information into the database is added to the cypher file (generated by the other program).

The cypher file for the nodes is executed with the cypher-shell tool.

For the relationships, a filter is used, because sometimes are also the diseases in outcomes that the drug should treat.
So, the indicates table is also considered to remove all pairs where the drug indicates the outcome.
Additionally, to not have only a few cases where this outcome appears it consider all cases where this combination appears at least 100-times.
Furthermore, it should at least a total frequency of 0.1% for the appearance of the drug-outcome. 
In this program, it generates a file for drug-disease and drug-outcome pairs where the drug is mapped to chemical and the outcome is mapped to Disease or SE.
Additionally, for pairs that appear multiple times, the information is combined to one edge. Also, a cypher file is generated with queries to integrate the chemical-disease and chemical-SE edges. The edge chemical-disease is called might_induces. For chemical-SE is it might_causes.

In the last step, the last cypher file is used to integrate the edges into Neo4j.
